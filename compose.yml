version: '3.9'

services:
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    ports:
      - 3000:3000
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`rohitpotato.xyz`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=le"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    depends_on:
      - backend

  backend:
    container_name: backend
    healthcheck:
      test: [ "CMD", "curl", '-f', 'http://localhost:4000/health' ]
      interval: 1m30s
      timeout: 30s
      retries: 5
    image: backend
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    ports:
      - 4000:4000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`api.rohitpotato.xyz`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.tls.certresolver=le"
      - "traefik.http.services.backend.loadbalancer.server.port=4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://rohit:monospaced@db:5432/monospaced?schema=public
      - EMAIL=rohit.212@icloud.com
      - PORT=4000
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: rohit
      PGUSER: rohit
      POSTGRES_PASSWORD: monospaced
      POSTGRES_DB: monospaced
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U rohit -d monospaced" ]
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-init/:/docker-entrypoint-initdb.d/

  reverse-proxy:
    container_name: reverse-proxy
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=rohit.mmm1996@gmail.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--api.insecure=true" # enable dashboard, not recommended for production
      # - "traefik.http.middlewares.auth.basicauth.users=user:$(htpasswd -nb user password)"
      - "traefik.http.routers.traefik.service=api@internal"
      # - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`dashboard.rohitpotato.xyz`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  pgdata: {}
  letsencrypt:
